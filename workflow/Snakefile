import pandas as pd
import sys

configfile: "config/config.yaml"
configfile: "config/api.yaml"
configfile: "config/solving.yaml"

localrules: all, clean
wildcard_constraints:
    scenario="[a-zA-Z0-9_]+",
    model_run=r"\d+"

# only use groups/names, so its okay to not use sanitized values
PARAMETERS = pd.read_csv(config["gsa"]["parameters"])
RESULTS = pd.read_csv(config["gsa"]["results"])

SCENARIO = config["scenario"]["name"]
RESULT_FILES = list(set(RESULTS.name.to_list()))
HEATMAPS = RESULTS.heatmap.dropna().to_list()

# Calculates number of model runs for the Method of Morris
GROUPS = PARAMETERS.group.unique()
MODELRUNS = range((len(GROUPS) + 1) * config["gsa"]["replicates"])

include: "rules/generate.smk"
include: "rules/prepare.smk"
include: "rules/sample.smk"
include: "rules/solve.smk"
include: "rules/results.smk"

rule all:
    input:
        expand("results/{scenario}/modelruns/{run}/network.nc", scenario=SCENARIO, run=MODELRUNS),
        expand("results/{scenario}/SA/{result}.csv", scenario=SCENARIO, result=RESULT_FILES),
        expand("results/{scenario}/heatmaps/{result}.png", scenario=SCENARIO, result=HEATMAPS)

rule clean:
    shell:
        "rm -rf results/* && rm -rf results/* && rm -rf modelruns/* && rm -rf temp/* "

rule clean_plots:
    shell:
        "rm -f results/{modelrun}/*.pdf"

rule make_dag:
    shell:
        "snakemake all --dag | dot -Tpdf > dag.pdf"